version: '3.4'

x-airflow-env:
    &airflow-env
    - LOAD_EX=n
    - DEPLOYMENT_ENV=${PEERSCOUT_DAGS_DEPLOYMENT_ENV}
    - GOOGLE_APPLICATION_CREDENTIALS=/home/airflow/.config/gcloud/credentials.json
    - EXTRACT_KEYWORDS_FILE_PATH=/home/airflow/app-config/peerscout-keyword/peerscout-keyword-data-pipeline.config.yaml
    - EXTRACT_KEYWORDS_MAX_ROWS=${EXTRACT_KEYWORDS_MAX_ROWS}

x-airflow-volumes:
    &airflow-volumes
        - ${GOOGLE_APPLICATION_CREDENTIALS:-~/.config/gcloud/application_default_credentials.json}:/tmp/credentials.json
        - ~/.aws/credentials:/tmp/.aws-credentials
        - ./test-config/peerscout-keyword-extraction-data-pipeline.config.yaml:/home/airflow/app-config/peerscout-keyword/peerscout-keyword-data-pipeline.config.yaml

x-airflow-defaults:
  &x-airflow-defaults
    volumes: *airflow-volumes
    environment: *airflow-env

services:
    peerscout-dags:
        environment:
            GOOGLE_APPLICATION_CREDENTIALS: /tmp/credentials.json
        volumes:
            - ./credentials.json:/tmp/credentials.json
        build:
            context: .
        image: ${IMAGE_REPO}:${IMAGE_TAG}
        command: ''

    peerscout-dags-dev:
        environment:
            - DEPLOYMENT_ENV=ci
        volumes:
            - ./credentials.json:/tmp/credentials.json
        build:
            context: .
            dockerfile: Dockerfile
            args:
                install_dev: y
        image:  ${IMAGE_REPO}-dev:${IMAGE_TAG}
        command: /bin/sh -c exit 0
        entrypoint: []

    test-client:
        image:  ${IMAGE_REPO}-dev:${IMAGE_TAG}
        environment: *airflow-env
        volumes: *airflow-volumes
        command: >
            bash -c "sudo install -D /tmp/credentials.json -m 644 -t  /home/airflow/.config/gcloud
            && sudo install -D /tmp/.aws-credentials -m 644 --no-target-directory /home/airflow/.aws/credentials
            && ./run_test.sh with-end-to-end"

    data-hub-pipelines:
        <<: *x-airflow-defaults
        image:  ${IMAGE_REPO}-dev:${IMAGE_TAG}
        environment:
            - DEPLOYMENT_ENV=${PEERSCOUT_DAGS_DEPLOYMENT_ENV}
            - GOOGLE_APPLICATION_CREDENTIALS=/tmp/credentials.json
            - AWS_CONFIG_FILE=/tmp/.aws-credentials
            - PYTHONPATH=/home/airflow/.local/lib/python3.8/site-packages
            - EXTRACT_KEYWORDS_FILE_PATH=/home/airflow/app-config/peerscout-keyword/peerscout-keyword-data-pipeline.config.yaml
            - EXTRACT_KEYWORDS_MAX_ROWS=${EXTRACT_KEYWORDS_MAX_ROWS}
        user: 0:0

    postgres:
        image: postgres:15
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        healthcheck:
            test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/5432"]
            interval: 10s
            timeout: 10s
            retries: 5
    
    redis:
        image: redis:5.0.5
        environment:
            - ALLOW_EMPTY_PASSWORD=yes

    # flower:
    #     image: elifesciences/peerscout-dags-dev
    #     depends_on:
    #         - redis
    #     environment: *airflow-env
    #     ports:
    #         - "5555:5555"
    #     command: celery flower
