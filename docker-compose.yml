version: '3.4'

x-airflow-env:
    &airflow-env
    - LOAD_EX=n
    - AIRFLOW_HOST=webserver
    - AIRFLOW_PORT=8080
    - AIRFLOW__CORE__EXECUTOR=DaskExecutor
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    - AIRFLOW__CORE__FERNET_KEY='81HqDtbqAywKSOumSha3BhWNOdQ26slT6K0YaZeZyPs='
    - AIRFLOW__DASK__CLUSTER_ADDRESS=dask-scheduler:8786
    - DEPLOYMENT_ENV=${PEERSCOUT_DAGS_DEPLOYMENT_ENV}
    - GOOGLE_APPLICATION_CREDENTIALS=/usr/local/airflow/.config/gcloud/credentials.json
    - EXTRACT_KEYWORDS_FILE_PATH=/usr/local/airflow/app-config/peerscout-keyword/peerscout-keyword-data-pipeline.config.yaml

x-airflow-volumes:
    &airflow-volumes
        - ${GOOGLE_APPLICATION_CREDENTIALS:-~/.config/gcloud/application_default_credentials.json}:/tmp/credentials.json
        - ~/.aws/credentials:/tmp/.aws-credentials
        - ./test-config/peerscout-keyword-extraction-data-pipeline.config.yaml:/usr/local/airflow/app-config/peerscout-keyword/peerscout-keyword-data-pipeline.config.yaml

services:
    peerscout-dags:
        environment:
            GOOGLE_APPLICATION_CREDENTIALS: /tmp/credentials.json
        volumes:
            - ./credentials.json:/tmp/credentials.json
        build:
            context: .
        image: elifesciences/peerscout-dags
        command: ''

    peerscout-dags-dev:
        environment:
            - DEPLOYMENT_ENV=ci
        volumes:
            - ./credentials.json:/tmp/credentials.json
        build:
            context: .
            dockerfile: Dockerfile
            args:
                install_dev: y
        image:  elifesciences/peerscout-dags-dev
        command: /bin/sh -c exit 0
        entrypoint: []

    webserver:
        depends_on:
            - postgres
            - dask-worker
            - dask-scheduler
        environment: *airflow-env
        image:  elifesciences/peerscout-dags-dev
        entrypoint: /entrypoint.sh
        command: webserver

    scheduler:
        image:  elifesciences/peerscout-dags-dev
        depends_on:
            - webserver
        environment: *airflow-env
        entrypoint: /entrypoint.sh
        command: scheduler

    test-client:
        image:  elifesciences/peerscout-dags-dev
        depends_on:
            - scheduler
        environment: *airflow-env
        volumes: *airflow-volumes
        command: >
            bash -c "sudo install -D /tmp/credentials.json -m 644 -t  /usr/local/airflow/.config/gcloud
            && sudo install -D /tmp/.aws-credentials -m 644 --no-target-directory /usr/local/airflow/.aws/credentials
            && ./run_test.sh with-end-to-end"

    postgres:
        image: postgres:9.6
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        healthcheck:
            test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/5432"]
            interval: 10s
            timeout: 10s
            retries: 5

    dask-scheduler:
        environment: *airflow-env
        image: elifesciences/peerscout-dags-dev
        hostname: dask-scheduler
        entrypoint: [ ]
        command: ["dask-scheduler"]

    dask-worker:
        environment: *airflow-env
        volumes: *airflow-volumes
        depends_on:
          - dask-scheduler
        image: elifesciences/peerscout-dags-dev
        hostname: dask-worker
        entrypoint: []
        command: >
            bash -c "sudo install -D /tmp/credentials.json -m 644 -t  /usr/local/airflow/.config/gcloud
            && sudo install -D /tmp/.aws-credentials -m 644 --no-target-directory /usr/local/airflow/.aws/credentials
            && ./worker.sh tcp://dask-scheduler:8786"
